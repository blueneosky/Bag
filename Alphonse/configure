#!/bin/bash

PYTHON_CMD="python3"
MAKE_CMD="make"
SYSTEMCTL_CMD="systemctl"
SUDO_CMD="sudo"

ALPHONSE_BIN_FILE="alphonse.py"
ALPHONSE_LIB_FILES=$(find  -name 'alphonse_*.py' '!' -name "$ALPHONSE_BIN_FILE" | xargs echo)
ALPHONSE_CGI_BIN_FILES=$(find  -name 'web_alphonse_*.py' | xargs echo)
ALPHONSE_CGI_BIN_LIB_FILES="alphonse_logger.py alphonse_config.py alphonse_phonenumbers.py"

normalize_path () {
  # shellcheck disable=SC2001
  echo "$(echo "$1" | sed 's#/*$##')/"
}

echo_ok () {
  printf "\033[32m[OK]\033[39m %s\n" "$1"
}

echo_ko () {
  printf "\033[31m[OK]\033[39m %s\n" "$1"
}

echo_i () {
  printf "\033[36m(i)\033[39m %s\n" "$1"
}

echo_with () {
  printf "  \033[37mWith %s=%s\033[39m\n" "$1" "$2"
}

echo_imply () {
  printf "  \033[33m=> %s\033[39m\n" "$1"
}

#======================================================================================
#   CONFIGURE
#======================================================================================
# load Config
ALPHONSE_SERVICE=no
ALPHONSE_WEB=no
source ./Config


# Where is 'python3'
ALPHONSE_DEP_PYTHON_BIN=$(type -p "$PYTHON_CMD")
if [ -z "$ALPHONSE_DEP_PYTHON_BIN" ]; then
  echo_ko "'python3' not found"
  echo_imply "Please install python3"
  exit 1
else
  echo_ok "'python3' found"
  echo_with "PYTHON_BIN" "$ALPHONSE_DEP_PYTHON_BIN"
  SED_FUNC="s#{{ALPHONSE_DEP_PYTHON_BIN}}#$ALPHONSE_DEP_PYTHON_BIN#g"
fi

# Is 'make' exist
ALPHONSE_DEP_MAKE=$(type -p "$MAKE_CMD")
if [ -z "$ALPHONSE_DEP_MAKE" ]; then
  echo_ko "'make' not found"
  echo_imply "Please install make or building tools package"
  exit 1
else
  echo_ok "'make' found"
fi

#TODO test module needed !

echo_ok "'alphonse' script"
SED_FUNC="$SED_FUNC; s#{{ALPHONSE_BIN_FILE}}#$ALPHONSE_BIN_FILE#g"
echo_with "ALPHONSE_BIN_FILE" "$ALPHONSE_BIN_FILE"

SED_FUNC="$SED_FUNC; s#{{ALPHONSE_LIB_FILES}}#$ALPHONSE_LIB_FILES#g"
echo_with "ALPHONSE_LIB_FILES" "$ALPHONSE_LIB_FILES"

ALPHONSE_BIN_DIR="$(normalize_path "$ALPHONSE_BIN_DIR")"
SED_FUNC="$SED_FUNC; s#{{ALPHONSE_BIN_DIR}}#$ALPHONSE_BIN_DIR#g"
echo_with "BIN_DIR" "$ALPHONSE_BIN_DIR"

ALPHONSE_DATA_DIR="$(normalize_path "$ALPHONSE_DATA_DIR")"
SED_FUNC="$SED_FUNC; s#{{ALPHONSE_DATA_DIR}}#$ALPHONSE_DATA_DIR#g"
echo_with "DATA_DIR" "$ALPHONSE_DATA_DIR"

SED_FUNC="$SED_FUNC; s#{{ALPHONSE_LOG_FILE}}#$ALPHONSE_LOG_FILE#g"
echo_with "LOG_FILE" "$ALPHONSE_LOG_FILE"

if [ "$ALPHONSE_SERVICE" = "yes" ]; then
  echo_i "service activated"

  ALPHONSE_DEP_SYSTEMCTL_BIN=$(type -p "$SYSTEMCTL_CMD")
  if [ -z "$ALPHONSE_DEP_SYSTEMCTL_BIN" ]; then
    echo_ko "'systemctl' not found"
    echo_imply "service was designed for systemd"
    exit 1
  else
    SED_FUNC="$SED_FUNC; s#{{ALPHONSE_DEP_SYSTEMCTL_BIN}}#$ALPHONSE_DEP_SYSTEMCTL_BIN#g"
    echo_ok "'systemctl' found"
    echo_with "SYSTEMCTL_BIN" "$ALPHONSE_DEP_SYSTEMCTL_BIN"
  fi

  ALPHONSE_SERVICE_DIR="$(normalize_path "$ALPHONSE_SERVICE_DIR")"
  SED_FUNC="$SED_FUNC; s#{{ALPHONSE_SERVICE_DIR}}#$ALPHONSE_SERVICE_DIR#g"
  echo_with "SERVICE_DIR" "$ALPHONSE_SERVICE_DIR"

  SED_FUNC="$SED_FUNC; s#\\[@1\\]##g"
else
  SED_FUNC="$SED_FUNC; /^\[@1\]/d"
fi

if [ "$ALPHONSE_WEB" = "yes" ]; then
  echo_i "Web interface activated"
  ALPHONSE_WWW_DIR="$(normalize_path "$ALPHONSE_WWW_DIR")"
  SED_FUNC="$SED_FUNC; s#{{ALPHONSE_WWW_DIR}}#$ALPHONSE_WWW_DIR#g"
  echo_with "WWW_DIR" "$ALPHONSE_WWW_DIR"

  ALPHONSE_CGI_BIN_DIR="$(normalize_path "$ALPHONSE_CGI_BIN_DIR")"
  SED_FUNC="$SED_FUNC; s#{{ALPHONSE_CGI_BIN_DIR}}#$ALPHONSE_CGI_BIN_DIR#g"
  echo_with "CGI_BIN_DIR" "$ALPHONSE_CGI_BIN_DIR"

  SED_FUNC="$SED_FUNC; s#{{ALPHONSE_CGI_BIN_FILES}}#$ALPHONSE_CGI_BIN_FILES#g"
  echo_with "CGI_BIN_FILES" "$ALPHONSE_CGI_BIN_FILES"

  SED_FUNC="$SED_FUNC; s#{{ALPHONSE_CGI_BIN_LIB_FILES}}#$ALPHONSE_CGI_BIN_LIB_FILES#g"
  echo_with "CGI_BIN_LIB_FILES" "$ALPHONSE_CGI_BIN_LIB_FILES"

  SED_FUNC="$SED_FUNC; s#\\[@2\\]##g"
else
  SED_FUNC="$SED_FUNC; /^\[@2\]/d"
fi

for i in *.in; do
  [ -f "$i" ] || continue
  echo_i "Writing ${i%.in} from $i"
  sed "$SED_FUNC" "$i" > "${i%.in}"
done

echo_ok "Configuration done"

if [ -z "$(type -p $SUDO_CMD)" ]; then
  echo_imply "please execute as root user \$> make install"
else
  echo_imply "please execute \$> sudo make install"
fi